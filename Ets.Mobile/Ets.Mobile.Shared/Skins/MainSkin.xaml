<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <Brush x:Key="ScheduleExpandingControlBorderBrush">#FF000000</Brush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <Brush x:Key="ScheduleExpandingControlBorderBrush">#FF000000</Brush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <Brush x:Key="ScheduleExpandingControlBorderBrush">#FF000000</Brush>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <!-- Main Colors                                    -->
    <Color x:Key="EtsRedLowestColor">#680100</Color>
    <Color x:Key="EtsRedMidColor">#7F0100</Color>
    <Color x:Key="EtsRedMediumColor">#FF0200</Color>
    <Color x:Key="EtsRedHighColor">#CC0100</Color>
    <Color x:Key="EtsRedHighestColor">#FF4E4C</Color>

    <Color x:Key="EtsBackgroundColor">#FFFFFFFF</Color>
    <Color x:Key="EtsBackgroundMainColor">#f2f2f2</Color>
    <Color x:Key="EtsBackgroundBodyColor">#e6e6e6</Color>
    <Color x:Key="EtsSideNavigationBackgroundColor">#2b2b2b</Color>
    <Color x:Key="EtsTextMainColor">#323232</Color>
    <Color x:Key="EtsTextSecondaryColor">#666666</Color>
    <Color x:Key="EtsStateTextColor">#a6a6a6</Color>
    
    <Color x:Key="AppointmentDescriptionColor">#8c8c8c</Color>

    <!-- Brush                                          -->
    <Brush x:Key="EtsRedLowestBrush">#680100</Brush>
    <Brush x:Key="EtsRedMidBrush">#7F0100</Brush>
    <Brush x:Key="EtsRedMediumBrush">#FF0200</Brush>
    <Brush x:Key="EtsRedHighBrush">#CC0100</Brush>
    <Brush x:Key="EtsRedHighestBrush">#FF4E4C</Brush>

    <Brush x:Key="EtsCommandBarBrush">#FFFFFF</Brush>
    <Brush x:Key="EtsMenuButtonBrush">#FF0200</Brush>
    <Brush x:Key="EtsBackgroundBrush">#FFFFFFFF</Brush>
    <Brush x:Key="EtsBackgroundMainBrush">#f2f2f2</Brush>
    <Brush x:Key="EtsBackgroundBodyBrush">#e6e6e6</Brush>

    <Brush x:Key="EtsTextMainBrush">#323232</Brush>
    <Brush x:Key="EtsTextBlackBrush">#000000</Brush>
    <Brush x:Key="EtsTextWhiteBrush">#FFFFFF</Brush>
    <Brush x:Key="EtsTextGrayBrush">#707070</Brush>
    <Brush x:Key="EtsTextSecondaryBrush">#666666</Brush>

    <Brush x:Key="EtsBorderItemBrush">#d9d9d9</Brush>

    <Brush x:Key="EtsSideNavigationBackgroundBrush">#2b2b2b</Brush>

    <!-- Main Fonts                                     -->
    <FontFamily x:Key="EtsMainFont">Segoe WP</FontFamily>

    <!-- Sizes                                          -->
    <x:Double x:Key="Size1">36</x:Double>
    <x:Double x:Key="Size2">30</x:Double>
    <x:Double x:Key="Size3">24</x:Double>
    <x:Double x:Key="Size3_5">20</x:Double>
    <x:Double x:Key="Size4">18</x:Double>
    <x:Double x:Key="Size5">14</x:Double>
    <x:Double x:Key="Size6">12</x:Double>
    <x:Double x:Key="Size7">10</x:Double>
    <x:Double x:Key="Size8">8</x:Double>

    <!-- Command Bar                                    -->
    <Brush x:Key="EtsCommandBarForeground">#6c6f73</Brush>
    <Brush x:Key="EtsCommandBarBackground">#f2f2f2</Brush>
    
    <!-- Buttons                                        -->
    <Style x:Key="EtsButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource EtsMainFont}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="EtsButtonRedLowestColor" TargetType="Button" BasedOn="{StaticResource EtsButtonStyle}">
        <Setter Property="Background" Value="{StaticResource EtsRedLowestColor}" />
    </Style>
    <Style x:Key="EtsButtonRedMidColor" TargetType="Button" BasedOn="{StaticResource EtsButtonStyle}">
        <Setter Property="Background" Value="{StaticResource EtsRedMidColor}" />
    </Style>
    <Style x:Key="EtsButtonRedMediumColor" TargetType="Button" BasedOn="{StaticResource EtsButtonStyle}">
        <Setter Property="Background" Value="{StaticResource EtsRedMediumColor}" />
    </Style>
    <Style x:Key="EtsButtonRedHighColor" TargetType="Button" BasedOn="{StaticResource EtsButtonStyle}">
        <Setter Property="Background" Value="{StaticResource EtsRedHighColor}" />
    </Style>
    <Style x:Key="EtsButtonRedHighestColor" TargetType="Button" BasedOn="{StaticResource EtsButtonStyle}">
        <Setter Property="Background" Value="{StaticResource EtsRedHighestColor}" />
    </Style>
    
    <Style x:Key="EtsLoginButton" TargetType="Button" BasedOn="{StaticResource EtsButtonStyle}">
        <Setter Property="Padding" Value="20" />
        <Setter Property="FontSize" Value="32" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource EtsRedMediumColor}" Opacity="0.5" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock                                      -->
    <Style x:Key="EtsTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource EtsMainFont}" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>

    <Style x:Key="EtsTextBlockRedLowestColor" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsRedLowestColor}" />
    </Style>
    <Style x:Key="EtsTextBlockRedMidColor" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsRedMidColor}" />
    </Style>
    <Style x:Key="EtsTextBlockRedMediumColor" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsRedMediumColor}" />
    </Style>
    <Style x:Key="EtsTextBlockRedHighColor" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsRedHighColor}" />
    </Style>
    <Style x:Key="EtsTextBlockRedHighestColor" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsRedHighestColor}" />
    </Style>
    <Style x:Key="EtsTextBlockMainColor1" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size1}" />
    </Style>
    <Style x:Key="EtsTextBlockMainColor2" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size2}" />
    </Style>
    <Style x:Key="EtsTextBlockMainColor3" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size3}" />
    </Style>
    <Style x:Key="EtsTextBlockMainColor3_5" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size3_5}" />
    </Style>
    <Style x:Key="EtsTextBlockMainColor4" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size4}" />
    </Style>
    <Style x:Key="EtsTextBlockMainColor5" TargetType="TextBlock" BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size5}" />
    </Style>

    <!-- Black TextBlock -->
    <Style x:Key="EtsBlackTextStyle" TargetType="TextBlock"  BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextBlackBrush}" />
    </Style>

    <Style x:Key="EtsTextBlockBlack1" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size1}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack2" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size2}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack3" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size3}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack3_5" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size3_5}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack4" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size4}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack5" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size5}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack6" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size6}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack7" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size7}" />
    </Style>
    <Style x:Key="EtsTextBlockBlack8" TargetType="TextBlock" BasedOn="{StaticResource EtsBlackTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size8}" />
    </Style>

    <!-- White TextBlock -->
    <Style x:Key="EtsWhiteTextStyle" TargetType="TextBlock"  BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextWhiteBrush}" />
    </Style>

    <Style x:Key="EtsTextBlockWhite1" TargetType="TextBlock" BasedOn="{StaticResource EtsWhiteTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextWhiteBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size1}" />
    </Style>
    <Style x:Key="EtsTextBlockWhite2" TargetType="TextBlock" BasedOn="{StaticResource EtsWhiteTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextWhiteBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size2}" />
    </Style>
    <Style x:Key="EtsTextBlockWhite3" TargetType="TextBlock" BasedOn="{StaticResource EtsWhiteTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextWhiteBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size3}" />
    </Style>
    <Style x:Key="EtsTextBlockWhite4" TargetType="TextBlock" BasedOn="{StaticResource EtsWhiteTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextWhiteBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size4}" />
    </Style>
    <Style x:Key="EtsTextBlockWhite5" TargetType="TextBlock" BasedOn="{StaticResource EtsWhiteTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextWhiteBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size5}" />
    </Style>

    <!-- Gray TextBlock -->
    <Style x:Key="EtsGrayTextStyle" TargetType="TextBlock"  BasedOn="{StaticResource EtsTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
    </Style>

    <Style x:Key="EtsTextBlocGray1" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size1}" />
    </Style>
    <Style x:Key="EtsTextBlockGray2" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size2}" />
    </Style>
    <Style x:Key="EtsTextBlockGray3" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size3}" />
    </Style>
    <Style x:Key="EtsTextBlockGray4" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size4}" />
    </Style>
    <Style x:Key="EtsTextBlockGray5" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size5}" />
    </Style>
    <Style x:Key="EtsTextBlockGray6" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size6}" />
    </Style>
    <Style x:Key="EtsTextBlockGray7" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size7}" />
    </Style>
    <Style x:Key="EtsTextBlockGray8" TargetType="TextBlock" BasedOn="{StaticResource EtsGrayTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource Size8}" />
    </Style>

    <!-- Gray RichTextBlock -->
    <Style x:Key="EtsRichTextStyle" TargetType="RichTextBlock">
        <Setter Property="FontFamily" Value="{StaticResource EtsMainFont}" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>
    
    <Style x:Key="EtsRichTextBlockGray1" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size1}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray2" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size2}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray3" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size3}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray4" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size4}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray5" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size5}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray6" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size6}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray7" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size7}" />
    </Style>
    <Style x:Key="EtsRichTextBlockGray8" TargetType="RichTextBlock" BasedOn="{StaticResource EtsRichTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource EtsTextGrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size8}" />
    </Style>
    
    <!-- ListView                                       -->
    <Style x:Key="EtsListViewHeaderItem" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource EtsMainFont}" />
        <Setter Property="Foreground" Value="{StaticResource EtsTextMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size2}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="24" />
    </Style>

    <!-- CommandBar                                     -->
    <SolidColorBrush x:Key="CommandBarBackgroundThemeBrush" Color="{StaticResource EtsBackgroundColor}" />
    <SolidColorBrush x:Key="CommandBarForegroundThemeBrush" Color="{StaticResource EtsBackgroundColor}" />

    <SolidColorBrush x:Key="AppBarBackgroundThemeBrush" Color="{StaticResource EtsBackgroundColor}" />
    <SolidColorBrush x:Key="AppBarBorderThemeBrush" Color="{ThemeResource PhonePageBackgroundColor}" />
    <SolidColorBrush x:Key="AppBarItemDisabledForegroundThemeBrush" Color="{ThemeResource PhoneDisabledColor}" />
    <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush" Color="{ThemeResource PhoneForegroundColor}" />
    <SolidColorBrush x:Key="AppBarItemPointerOverBackgroundThemeBrush" Color="{ThemeResource PhoneBaseLowColor}" />
    <SolidColorBrush x:Key="AppBarItemPointerOverForegroundThemeBrush" Color="{ThemeResource PhoneForegroundColor}" />
    <SolidColorBrush x:Key="AppBarItemPressedForegroundThemeBrush" Color="{ThemeResource PhoneBackgroundColor}" />
    <SolidColorBrush x:Key="AppBarSeparatorForegroundThemeBrush" Color="{ThemeResource PhoneBaseMediumMidColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBackgroundThemeBrush" Color="{ThemeResource PhoneBaseMidColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBorderThemeBrush" Color="{ThemeResource PhoneBaseMidColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonPointerOverBackgroundThemeBrush" Color="{ThemeResource PhoneBaseLowColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource PhoneForegroundColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedBorderThemeBrush" Color="{ThemeResource PhoneForegroundColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedDisabledBackgroundThemeBrush" Color="{ThemeResource PhoneDisabledColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedDisabledForegroundThemeBrush" Color="{ThemeResource PhoneBackgroundColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedForegroundThemeBrush" Color="{ThemeResource PhoneBackgroundColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBorderThemeBrush" Color="{ThemeResource PhoneForegroundColor}" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedForegroundThemeBrush" Color="{ThemeResource PhoneForegroundColor}" />

    <x:Double x:Key="AppBarThemeMinHeight">54.5</x:Double>
    <Thickness x:Key="AppBarBottomBorderThemeThickness">0,1.5,0,0</Thickness>
    <Thickness x:Key="AppBarBottomThemePadding">0,0,0,1.5</Thickness>
    <Thickness x:Key="AppBarTopBorderThemeThickness">0,0,0,1.5</Thickness>
    <Thickness x:Key="AppBarTopThemePadding">0,1.5,0,0</Thickness>
    <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush" Color="Transparent" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedDisabledBorderThemeBrush" Color="Transparent" />
    <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBackgroundThemeBrush" Color="Transparent" />

    <!-- Default style for Windows.UI.Xaml.Controls.AppBarButton -->
    <Style x:Key="EtsAppBarButton"  TargetType="AppBarButton">
        <Setter Property="Foreground" Value="{StaticResource EtsRedHighBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AppBarButton">
                    <StackPanel x:Name="LayoutRoot" Width="80" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <!-- FullSize is used when we are in landscape or filled mode -->
                                <VisualState x:Name="FullSize" />
                                <!-- Compact is used when we are in portrait or snapped mode -->
                                <VisualState x:Name="Compact">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="48" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource EtsRedHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource EtsRedHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Width="38.5" Height="38.5" Margin="0,12,0,4" HorizontalAlignment="Center">
                            <Ellipse x:Name="Ellipse" UseLayoutRounding="False" Width="38.5" Height="38.5" Fill="{ThemeResource AppBarItemBackgroundThemeBrush}"
                                Stroke="{StaticResource EtsRedHighBrush}" StrokeThickness="2.5" />
                            <Grid x:Name="ContentRoot" Background="Transparent">
                                <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="{StaticResource EtsRedHighBrush}" HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw" />
                            </Grid>
                        </Grid>
                        <TextBlock x:Name="TextLabel" Text="{TemplateBinding Label}" Foreground="{StaticResource EtsRedHighBrush}" FontSize="9.5"
                       FontFamily="{TemplateBinding FontFamily}" TextAlignment="Center" Width="70.5" TextWrapping="Wrap" Margin="0,0,0,10.5" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default style for Windows.UI.Xaml.Controls.AppBarToggleButton -->
    <Style TargetType="AppBarToggleButton">
        <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AppBarToggleButton">
                    <StackPanel x:Name="LayoutRoot" Width="80" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <!-- FullSize is used when we are in landscape or filled mode -->
                                <VisualState x:Name="FullSize" />
                                <!-- Compact is used when we are in portrait or snapped mode -->
                                <VisualState x:Name="Compact">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="48" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedBorderThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPressedBorderThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedDisabledBorderThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedDisabledBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Width="38.5" Height="38.5" Margin="0,11,0,4" HorizontalAlignment="Center">
                            <Ellipse x:Name="Ellipse" UseLayoutRounding="False" Width="38.5" Height="38.5" Fill="{ThemeResource AppBarItemBackgroundThemeBrush}"
                       Stroke="{ThemeResource AppBarItemForegroundThemeBrush}" StrokeThickness="2.5" />
                            <Grid x:Name="ContentRoot" Background="Transparent">
                                <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw" />
                            </Grid>
                        </Grid>
                        <TextBlock x:Name="TextLabel" Text="{TemplateBinding Label}" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}" FontSize="9.5"
                       FontFamily="{TemplateBinding FontFamily}" TextAlignment="Center" Width="70.5" TextWrapping="Wrap" Margin="0,0,0,10.5" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Schedule -->
    <Brush x:Key="SfScheduleTimelineBorder">#000000</Brush>
    <Brush x:Key="SfScheduleDayBorder">#000000</Brush>
    <Brush x:Key="SfScheduleCommandBrush">#000000</Brush>
    <Brush x:Key="SfScheduleChangeCalendarBackgroundBrush">#dddddd</Brush>
    <Brush x:Key="AppointmentDescriptionBrush">#8c8c8c</Brush>
    <Brush x:Key="AppointmentTypeBrush">#bbbbbb</Brush>
    <FontFamily x:Key="SfScheduleAppointmentFontFamily">Calibri</FontFamily>
    <Style x:Key="FlyoutButtonStyle" TargetType="ButtonBase">
        <Setter Property="Background"
                    Value="Transparent" />
        <Setter Property="Padding"
                    Value="0" />
        <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed"
                                                          To="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Container" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PointerOver" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Container" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Container" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="Container" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="Container" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          x:Name="Container"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChangeCalendarViewFlyoutPresenter" TargetType="FlyoutPresenter">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="ChangeCalendarViewFlyoutButtonStyle" TargetType="Button" BasedOn="{StaticResource FlyoutButtonStyle}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="{StaticResource SfScheduleCommandBrush}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="14,0,14,0" />
    </Style>

    <Style x:Key="ChangeCalendarViewFlyoutFirstButtonStyle" TargetType="Button" BasedOn="{StaticResource ChangeCalendarViewFlyoutButtonStyle}">
        <Setter Property="Margin" Value="14,14,14,3" />
    </Style>

    <Style x:Key="ChangeCalendarViewFlyoutLastButtonStyle" TargetType="Button" BasedOn="{StaticResource ChangeCalendarViewFlyoutButtonStyle}">
        <Setter Property="Margin" Value="14,0,14,20" />
    </Style>

    <Style x:Key="AppointementStartTime" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource Size3_5}" />
        <Setter Property="FontFamily" Value="{StaticResource SfScheduleAppointmentFontFamily}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="AppointmentTypeStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AppointmentTypeBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size4}" />
        <Setter Property="FontFamily" Value="{StaticResource SfScheduleAppointmentFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,-4,0,-4" />
    </Style>
    
    <Style x:Key="AppointmentDescriptionStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AppointmentDescriptionBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Size3_5}" />
        <Setter Property="FontFamily" Value="{StaticResource SfScheduleAppointmentFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="AppointementSubject" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource Size3_5}" />
        <Setter Property="FontFamily" Value="{StaticResource SfScheduleAppointmentFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="ListViewItemWithoutPressedStyle"  TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="False"/>
        <Setter Property="Margin" Value="{ThemeResource ListViewItemMargin}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ContentScaleTransform"/>
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="TiltContainer"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed">
                                    <!--<Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="CheckboxPressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MultiSelectStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
                                    <VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoMultiSelect"/>
                                <VisualState x:Name="ListMultiSelect">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
                                        <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="GridMultiSelect">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderModeStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ReorderEnabled">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Reorderable">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReorderDisabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ReorderHintContent" Background="Transparent">
                            <Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
                                <Border x:Name="CheckboxOuterContainer">
                                    <Border.Clip>
                                        <RectangleGeometry Rect="0,0,25.5,25.5"/>
                                    </Border.Clip>
                                    <Grid x:Name="CheckboxContainer">
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
                                        </Grid.RenderTransform>
                                        <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
                                        <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <Border x:Name="ContentContainer">
                                <Border x:Name="TiltContainer">
                                    <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="ContentBorderTranslateTransform"/>
                                        </Border.RenderTransform>
                                        <Grid>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Border>
                            <Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
                                <Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
                                    <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
                                    <Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
