<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Universal.UI.Xaml.Controls"
    xmlns:shared="using:Ets.Mobile.Content.Shared">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MainSkin.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <Color x:Key="SystemBaseWhiteColor">#FFFFFFFF</Color>
            <Color x:Key="SystemBaseBlackColor">#000000</Color>
            <Color x:Key="SystemBaseHighColor">#FFFFFFFF</Color>
            <Color x:Key="SystemBaseMediumColor">#99FFFFFF</Color>
            <Color x:Key="SystemListLowColor">#19FFFFFF</Color>
            <Color x:Key="SystemListMediumColor">#33FFFFFF</Color>
        </ResourceDictionary>
        <!--<ResourceDictionary x:Key="Default">
            <Color x:Key="SystemBaseHighColor">#FFFFFFFF</Color> - Convert to SystemBaseWhiteColor
            <Color x:Key="SystemBaseMediumColor">#99FFFFFF</Color>
            <Color x:Key="SystemListLowColor">#19FFFFFF</Color>
            <Color x:Key="SystemListMediumColor">#33FFFFFF</Color>
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <Color x:Key="SystemBaseHighColor">#FFFFFFFF</Color>
            <Color x:Key="SystemBaseMediumColor">#99FFFFFF</Color>
            <Color x:Key="SystemListLowColor">#19FFFFFF</Color>
            <Color x:Key="SystemListMediumColor">#33FFFFFF</Color>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <Color x:Key="SystemBaseHighColor">#FF000000</Color>
            <Color x:Key="SystemBaseMediumColor">#99000000</Color>
            <Color x:Key="SystemListLowColor">#19000000</Color>
            <Color x:Key="SystemListMediumColor">#33000000</Color>
        </ResourceDictionary>-->
    </ResourceDictionary.ThemeDictionaries>

    <!-- design reference http://osguni/?id=19359&Background=19361 -->

    <!-- temporary solution until generic.xaml is updated -->
    <!--<FontFamily x:Key="SymbolThemeFontFamily">/Fonts/mdl2-v136.ttf#mdl2-v136</FontFamily>-->
    <FontFamily x:Key="SymbolThemeFontFamily">/Fonts/segmdl2.ttf#Segoe MDL2 Assets</FontFamily>

    <SolidColorBrush x:Key="SystemControlBackgroundAccentBrush" Color="#FF0200" />
    <!-- <SolidColorBrush x:Key="SystemControlBackgroundAccentBrush" Color="{ThemeResource SystemAccentColor}" /> -->
    
    <SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="{ThemeResource SystemBaseMediumColor}" Opacity="1" />
    <SolidColorBrush x:Key="SplitViewForegroundBrush" Color="{ThemeResource SystemBaseWhiteColor}" />
    <SolidColorBrush x:Key="SplitViewForegroundDarkBrush" Color="{ThemeResource SystemBaseBlackColor}" />
    <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="{ThemeResource SystemListMediumColor}" />
    <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="{ThemeResource SystemListLowColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="{StaticResource EtsRedLowestColor}" Opacity="0.3" />
    <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="{StaticResource EtsRedLowestColor}" Opacity="0.3" />
    <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="{StaticResource EtsRedLowestColor}" Opacity="0.3" /> <!-- SystemListAccentHighColor -->

    <x:Double x:Key="SplitViewNormalNavFontSize">20</x:Double>
    <x:Double x:Key="SplitViewHamburgerButtonFontSize">25</x:Double>
    <x:Double x:Key="SplitViewBackButtonHeight">32</x:Double>
    <x:Double x:Key="SplitViewListItemHeight">60</x:Double>
    <x:Double x:Key="SplitViewUserImageSize">37</x:Double>
    <x:String x:Key="BackButtonText"></x:String>
    <x:String x:Key="ForwardButtonText"></x:String>
    <x:String x:Key="MenuButtonText"></x:String>
    
    <Style TargetType="controls:SplitView">
        <Setter Property="IsPaneOpen" Value="False" />
        <Setter Property="OpenPaneLength" Value="320" />
        <Setter Property="CompactPaneLength" Value="{StaticResource SplitViewListItemHeight}" />
        <Setter Property="PaneBackground" Value="{ThemeResource SplitViewBackgroundBrush}" />
        <Setter Property="DisplayMode" Value="CompactOverlay" />
        <Setter Property="RequestedTheme" Value="Dark" />
    </Style>

    <Style TargetType="TextBlock" x:Key="SplitViewTextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
        <!--<Setter Property="FontFamily" Value="/Fonts/mdl2-v136.ttf#mdl2-v136" />-->
        <Setter Property="FontSize" Value="{ThemeResource SplitViewNormalNavFontSize}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="SplitViewTextBlockDarkStyle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundDarkBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
        <!--<Setter Property="FontFamily" Value="/Fonts/mdl2-v136.ttf#mdl2-v136" />-->
        <Setter Property="FontSize" Value="{ThemeResource SplitViewNormalNavFontSize}" />
    </Style>

    <Style TargetType="RadioButton" x:Key="SplitViewRadioButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NixonGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <Grid.Resources>
                                <Style TargetType="Rectangle" x:Name="FocusVisual">
                                    <Setter Property="Opacity" Value="0" />
                                    <Setter Property="StrokeDashArray" Value="1,1" />
                                    <Setter Property="StrokeEndLineCap" Value="Square" />
                                </Style>
                            </Grid.Resources>

                            <!-- background -->

                            <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                                <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                                <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                            </Grid>
                            <Grid x:Name="CheckedBackground" Grid.ColumnSpan="4" Visibility="Collapsed" Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                                <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                                <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                            </Grid>

                            <!-- focus -->
                            <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                            <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                            <!-- glyph -->
                            <ContentPresenter x:Name="NixonGlyph" Content="{TemplateBinding Tag}" />

                            <!-- text -->
                            <ContentPresenter x:Name="ContentPresenter"
                        			Grid.Column="1"
                        			Margin="{TemplateBinding Padding}"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			AutomationProperties.AccessibilityView="Raw"
                        			Content="{TemplateBinding Content}"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Menu Button Style-->
    <Style TargetType="shared:MenuButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Background)" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#c2c2c2</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Tapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Background)" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#c2c2c2</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuBar Button Style-->
    <Style TargetType="shared:MenuButtonBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Background)" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource EtsRedHighestBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Tapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Background)" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource EtsRedHighestBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
