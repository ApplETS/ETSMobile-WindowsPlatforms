<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:controls="using:ReactiveUI.Xaml.Controls"
	mc:Ignorable="d">
    <Style TargetType="controls:ReactivePresenter">
        <Setter Property="ErrorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Pivot.SlideInAnimationGroup="1" Text="{Binding DefaultErrorMessage}" TextWrapping="WrapWholeWords" Style="{StaticResource EtsTextBlockMainColor3}" Foreground="#a6a6a6" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EmptyTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Pivot.SlideInAnimationGroup="1" Text="{Binding DefaultEmptyMessage}" TextWrapping="WrapWholeWords" Style="{StaticResource EtsTextBlockMainColor3}" Foreground="#a6a6a6" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RefreshingTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.7">
                        <StackPanel VerticalAlignment="Center">
                            <ProgressRing Pivot.SlideInAnimationGroup="1" IsActive="True" Foreground="{StaticResource EtsTextMainBrush}" Background="Transparent" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ReactivePresenter">
                    <Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ReactiveGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Error">
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ErrorPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Value">
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ErrorPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ValuePresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_RefreshingPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_EmptyPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Refreshing">
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ErrorPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_EmptyPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation To=".80" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ValuePresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_RefreshingPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Empty">
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ErrorPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ValuePresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_RefreshingPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_EmptyPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ContentPresenter Pivot.SlideInAnimationGroup="1" x:Name="PART_EmptyPresenter" Opacity="0" />
                            <ContentPresenter Pivot.SlideInAnimationGroup="1" x:Name="PART_ErrorPresenter" Opacity="0" />
                            <ContentPresenter Pivot.SlideInAnimationGroup="1" x:Name="PART_ValuePresenter" Opacity="0" />
                            <ContentPresenter Pivot.SlideInAnimationGroup="1" x:Name="PART_RefreshingPresenter" Opacity="0">
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>